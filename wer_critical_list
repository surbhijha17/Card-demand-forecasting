import pandas as pd
import re

# Sample data frame
data = {
    'delegate': ['Investment Ops', 'Investment Ops', 'Risk', 'Risk'],
    'legal_entity': ['amde', 'amde', 'amde', 'amde'],
    'metric': ['m1', 'm2', 'm1', 'm2'],
    'val_old': [100, 200, 150, 250],
    'val_new': [110, 210, 160, 260]
}

df = pd.DataFrame(data)

# QA function
def answer_question(question, df):
    # Define regex patterns
    patterns = {
        'delegate': r"delegate (\w+)",
        'legal_entity': r"legal entity (\w+)",
        'metric': r"metric (\w+)"
    }

    extracted_info = {}
    
    # Extract information from question
    for key, pattern in patterns.items():
        match = re.search(pattern, question)
        if match:
            extracted_info[key] = match.group(1)
        else:
            return f"Could not extract {key} from the question."
    
    # Filter the data frame based on the extracted information
    filtered_df = df.copy()
    for key, value in extracted_info.items():
        filtered_df = filtered_df[filtered_df[key] == value]

    if not filtered_df.empty:
        difference = filtered_df['val_new'].iloc[0] - filtered_df['val_old'].iloc[0]
        return f"The difference of val_old to val_new for {extracted_info['metric']} is {difference}."
    else:
        return "No data found for the given query."

# Example question
question = "For the delegate Investment Ops legal entity amde what is difference of val_old to val_new for metric m1"
answer = answer_question(question, df)
print(answer)
