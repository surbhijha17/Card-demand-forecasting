import streamlit as st
import pandas as pd

def filter_dataframe(df, selected_values):
    filtered_df = df[df['Column_A'].isin(selected_values['column_a']) &
                     df['Column_B'].isin(selected_values['column_b']) &
                     df['Column_C'].isin(selected_values['column_c'])]
    return filtered_df

def main():
    st.title('Data Filter App')
    
    uploaded_file = st.sidebar.file_uploader("Upload Excel file", type=["xlsx", "xls"])
    input_year = st.sidebar.text_input("Input Year:")
    input_quarter = st.sidebar.text_input("Input Quarter:")

    options_generated = False
    if uploaded_file is not None and input_year and input_quarter:
        options_generated = True
        df = pd.read_excel(uploaded_file)
        st.write("Sample Data:")
        st.write(df.head())

        column_a_options = df['Column_A'].unique()
        column_b_options = df['Column_B'].unique()
        column_c_options = df['Column_C'].unique()

    if options_generated:
        with st.sidebar.beta_expander("Filter Options", expanded=True):
            selected_values = {
                'column_a': st.multiselect("Select values for Column A", column_a_options, default=column_a_options[:2]),
                'column_b': st.multiselect("Select values for Column B", column_b_options, default=column_b_options[:2]),
                'column_c': st.multiselect("Select values for Column C", column_c_options, default=column_c_options[:2])
            }

        if st.sidebar.button("Generate"):
            if options_generated:
                filtered_df = filter_dataframe(df, selected_values)
                st.write("Filtered Data:")
                st.write(filtered_df)

if __name__ == "__main__":
    main()
