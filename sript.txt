import tkinter as tk
import re

def check_and_format_tags(event):
    current_line_number = int(text_editor.index("insert").split(".")[0])
    previous_line_number = current_line_number - 1
    prev_line_text = text_editor.get(f"{previous_line_number}.0", f"{previous_line_number}.end").strip()
    tags = text_editor.tag_names()  # Get all the applied tags

    for tag in tags:
        if tag in prev_line_text:
            text_editor.tag_add("bold", f"{current_line_number}.0", f"{current_line_number}.end")
            text_editor.tag_config("bold", font=("TkDefaultFont", 11, "bold"))
            break

    current_line_text = text_editor.get(f"{current_line_number}.0", f"{current_line_number}.end").strip()
    if re.search(r"\bAgent\b", current_line_text):
        match_obj = re.search(r"\bAgent\b", current_line_text)
        tag_start = match_obj.start()
        tag_end = match_obj.end()
        text_editor.tag_add("green", f"{current_line_number}.0+{tag_start}c", f"{current_line_number}.0+{tag_end}c")
        text_editor.tag_config("green", foreground="green")
        text_editor.tag_configure("bold")
    if re.search(r"\bCustomer\b", current_line_text):
        # Apply red color to "Customer" tag
        match_obj = re.search(r"\bCustomer\b", current_line_text)
        tag_start = match_obj.start()
        tag_end = match_obj.end()
        text_editor.tag_add("red", f"{current_line_number}.0+{tag_start}c", f"{current_line_number}.0+{tag_end}c")
        text_editor.tag_config("red", foreground="red")

    # Scroll the text editor to show the new line
    text_editor.yview_moveto(1.0)

root = tk.Tk()
text_editor = tk.Text(root)
text_editor.pack()

text_editor.tag_configure("bold", font=("TkDefaultFont", 18, "bold"))
text_editor.tag_configure("green", foreground="green")
text_editor.tag_configure("red", foreground="red")

text_editor.bind("<Return>", check_and_format_tags)
text_editor.bind("<KeyRelease>", check_and_format_tags)

root.mainloop()
