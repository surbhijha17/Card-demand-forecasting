import win32com.client

def find_table_and_cell(presentation_path, slide_index, row_index, col_index):
    app = win32com.client.Dispatch("PowerPoint.Application")
    presentation = app.Presentations.Open(presentation_path)
    slide = presentation.Slides(slide_index + 1)  # Slide index is 1-based in PowerPoint

    # Iterate over all shapes on the slide
    for shape_index in range(1, slide.Shapes.Count + 1):
        shape = slide.Shapes(shape_index)
        if shape.HasTable:
            table = shape.Table
            # Check if the specified cell is within this table
            if row_index < table.Rows.Count and col_index < table.Columns.Count:
                cell = table.Cell(row_index + 1, col_index + 1)  # Cell indices are 1-based in PowerPoint
                cell_left = shape.Left + cell.Left
                cell_top = shape.Top + cell.Top
                cell_width = cell.Width
                cell_height = cell.Height

                start_position = (cell_left, cell_top)
                end_position = (cell_left + cell_width, cell_top + cell_height)

                presentation.Close()
                app.Quit()

                return start_position, end_position

    presentation.Close()
    app.Quit()

    return None, None

# Example usage
presentation_path = r'path_to_your_presentation.pptx'
slide_index = 0
row_index = 0
col_index = 0

start_position, end_position = find_table_and_cell(presentation_path, slide_index, row_index, col_index)
if start_position is not None:
    print("Start Position:", start_position)
    print("End Position:", end_position)
else:
    print("Cell not found.")
