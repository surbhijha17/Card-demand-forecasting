let audioContext;
let mediaRecorder;
let socket;
let chunks = [];
let isRecording = false;

const startButton = document.getElementById('startButton');
const stopButton = document.getElementById('stopButton');

startButton.addEventListener('click', async () => {
    // Initialize WebSocket connection
    socket = new WebSocket('ws://0.0.0.0:8000');
    
    socket.onopen = () => {
        console.log('WebSocket connection opened');
    };

    socket.onmessage = (event) => {
        console.log('Transcript:', event.data);
    };

    socket.onerror = (error) => {
        console.error('WebSocket error:', error);
    };

    socket.onclose = () => {
        console.log('WebSocket connection closed');
    };

    // Initialize audio recording
    audioContext = new (window.AudioContext || window.webkitAudioContext)();
    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorder = new MediaRecorder(stream);
    
    mediaRecorder.ondataavailable = (event) => {
        chunks.push(event.data);

        if (isRecording && mediaRecorder.state === 'recording') {
            setTimeout(() => {
                if (chunks.length > 0) {
                    const blob = new Blob(chunks, { type: 'audio/webm' });
                    sendAudioChunk(blob);
                    chunks = [];
                }
            }, 3000); // Send audio every 3 seconds
        }
    };

    mediaRecorder.onstop = () => {
        const blob = new Blob(chunks, { type: 'audio/webm' });
        sendAudioChunk(blob);
        chunks = [];
        socket.close();
    };

    mediaRecorder.start();
    isRecording = true;
    startButton.disabled = true;
    stopButton.disabled = false;
});

stopButton.addEventListener('click', () => {
    if (isRecording) {
        mediaRecorder.stop();
        isRecording = false;
        startButton.disabled = false;
        stopButton.disabled = true;
    }
});

function sendAudioChunk(blob) {
    if (socket.readyState === WebSocket.OPEN) {
        socket.send(blob);
        console.log('Audio chunk sent');
    } else {
        console.error('WebSocket is not open');
    }
}
